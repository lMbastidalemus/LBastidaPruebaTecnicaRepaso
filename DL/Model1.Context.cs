//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LBastidaPruebaTecnicaRepasoEntities : DbContext
    {
        public LBastidaPruebaTecnicaRepasoEntities()
            : base("name=LBastidaPruebaTecnicaRepasoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Artista> Artistas { get; set; }
        public virtual DbSet<GeneroMusical> GeneroMusicals { get; set; }
        public virtual DbSet<Disco> Discoes { get; set; }
    
        public virtual int AddGenero(string nommbre)
        {
            var nommbreParameter = nommbre != null ?
                new ObjectParameter("Nommbre", nommbre) :
                new ObjectParameter("Nommbre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddGenero", nommbreParameter);
        }
    
        public virtual int DeleteGenero(Nullable<int> idGeneroMusical)
        {
            var idGeneroMusicalParameter = idGeneroMusical.HasValue ?
                new ObjectParameter("IdGeneroMusical", idGeneroMusical) :
                new ObjectParameter("IdGeneroMusical", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGenero", idGeneroMusicalParameter);
        }
    
        public virtual ObjectResult<GetAllGenero_Result> GetAllGenero()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllGenero_Result>("GetAllGenero");
        }
    
        public virtual ObjectResult<GetById_Result> GetById(Nullable<int> idGeneroMusical)
        {
            var idGeneroMusicalParameter = idGeneroMusical.HasValue ?
                new ObjectParameter("IdGeneroMusical", idGeneroMusical) :
                new ObjectParameter("IdGeneroMusical", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetById_Result>("GetById", idGeneroMusicalParameter);
        }
    
        public virtual int UpdateGenero(Nullable<int> idGeneroMusical, string nombre)
        {
            var idGeneroMusicalParameter = idGeneroMusical.HasValue ?
                new ObjectParameter("IdGeneroMusical", idGeneroMusical) :
                new ObjectParameter("IdGeneroMusical", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGenero", idGeneroMusicalParameter, nombreParameter);
        }
    
        public virtual int AddArtista(string nombreArtistico, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaNacimiento)
        {
            var nombreArtisticoParameter = nombreArtistico != null ?
                new ObjectParameter("NombreArtistico", nombreArtistico) :
                new ObjectParameter("NombreArtistico", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddArtista", nombreArtisticoParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaNacimientoParameter);
        }
    
        public virtual int deleteArtista(Nullable<int> idArtista)
        {
            var idArtistaParameter = idArtista.HasValue ?
                new ObjectParameter("IdArtista", idArtista) :
                new ObjectParameter("IdArtista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteArtista", idArtistaParameter);
        }
    
        public virtual ObjectResult<GetAllArtista_Result> GetAllArtista()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllArtista_Result>("GetAllArtista");
        }
    
        public virtual ObjectResult<GetByIdArtista_Result> GetByIdArtista(Nullable<int> idArtista)
        {
            var idArtistaParameter = idArtista.HasValue ?
                new ObjectParameter("IdArtista", idArtista) :
                new ObjectParameter("IdArtista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdArtista_Result>("GetByIdArtista", idArtistaParameter);
        }
    
        public virtual int UpdateArtista(Nullable<int> idArtista, string nombreArtistico, string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaNacimiento)
        {
            var idArtistaParameter = idArtista.HasValue ?
                new ObjectParameter("IdArtista", idArtista) :
                new ObjectParameter("IdArtista", typeof(int));
    
            var nombreArtisticoParameter = nombreArtistico != null ?
                new ObjectParameter("NombreArtistico", nombreArtistico) :
                new ObjectParameter("NombreArtistico", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateArtista", idArtistaParameter, nombreArtisticoParameter, nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaNacimientoParameter);
        }
    
        public virtual int DeleteDisco(Nullable<int> idDisco)
        {
            var idDiscoParameter = idDisco.HasValue ?
                new ObjectParameter("IdDisco", idDisco) :
                new ObjectParameter("IdDisco", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDisco", idDiscoParameter);
        }
    
        public virtual int ADDDisco(string titulo, Nullable<System.TimeSpan> duracion, Nullable<int> anio, string distribuidora, Nullable<int> ventas, string disponibilidad, Nullable<int> idArtista, Nullable<int> idGeneromusical)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var duracionParameter = duracion.HasValue ?
                new ObjectParameter("Duracion", duracion) :
                new ObjectParameter("Duracion", typeof(System.TimeSpan));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var distribuidoraParameter = distribuidora != null ?
                new ObjectParameter("Distribuidora", distribuidora) :
                new ObjectParameter("Distribuidora", typeof(string));
    
            var ventasParameter = ventas.HasValue ?
                new ObjectParameter("Ventas", ventas) :
                new ObjectParameter("Ventas", typeof(int));
    
            var disponibilidadParameter = disponibilidad != null ?
                new ObjectParameter("Disponibilidad", disponibilidad) :
                new ObjectParameter("Disponibilidad", typeof(string));
    
            var idArtistaParameter = idArtista.HasValue ?
                new ObjectParameter("IdArtista", idArtista) :
                new ObjectParameter("IdArtista", typeof(int));
    
            var idGeneromusicalParameter = idGeneromusical.HasValue ?
                new ObjectParameter("IdGeneromusical", idGeneromusical) :
                new ObjectParameter("IdGeneromusical", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDDisco", tituloParameter, duracionParameter, anioParameter, distribuidoraParameter, ventasParameter, disponibilidadParameter, idArtistaParameter, idGeneromusicalParameter);
        }
    
        public virtual ObjectResult<GetAllDisco_Result> GetAllDisco()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDisco_Result>("GetAllDisco");
        }
    
        public virtual ObjectResult<GetByIdDisco_Result> GetByIdDisco(Nullable<int> idDisco)
        {
            var idDiscoParameter = idDisco.HasValue ?
                new ObjectParameter("IdDisco", idDisco) :
                new ObjectParameter("IdDisco", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdDisco_Result>("GetByIdDisco", idDiscoParameter);
        }
    
        public virtual int UpdateDisco(Nullable<int> idDisco, string titulo, Nullable<System.TimeSpan> duracion, Nullable<int> anio, string distribuidora, Nullable<int> ventas, string disponibilidad, Nullable<int> idArtista, Nullable<int> idGeneromusical)
        {
            var idDiscoParameter = idDisco.HasValue ?
                new ObjectParameter("IdDisco", idDisco) :
                new ObjectParameter("IdDisco", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var duracionParameter = duracion.HasValue ?
                new ObjectParameter("Duracion", duracion) :
                new ObjectParameter("Duracion", typeof(System.TimeSpan));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            var distribuidoraParameter = distribuidora != null ?
                new ObjectParameter("Distribuidora", distribuidora) :
                new ObjectParameter("Distribuidora", typeof(string));
    
            var ventasParameter = ventas.HasValue ?
                new ObjectParameter("Ventas", ventas) :
                new ObjectParameter("Ventas", typeof(int));
    
            var disponibilidadParameter = disponibilidad != null ?
                new ObjectParameter("Disponibilidad", disponibilidad) :
                new ObjectParameter("Disponibilidad", typeof(string));
    
            var idArtistaParameter = idArtista.HasValue ?
                new ObjectParameter("IdArtista", idArtista) :
                new ObjectParameter("IdArtista", typeof(int));
    
            var idGeneromusicalParameter = idGeneromusical.HasValue ?
                new ObjectParameter("IdGeneromusical", idGeneromusical) :
                new ObjectParameter("IdGeneromusical", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDisco", idDiscoParameter, tituloParameter, duracionParameter, anioParameter, distribuidoraParameter, ventasParameter, disponibilidadParameter, idArtistaParameter, idGeneromusicalParameter);
        }
    }
}
